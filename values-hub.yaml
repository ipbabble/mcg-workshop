clusterGroup:
  name: hub
  isHubCluster: true

  namespaces:
    - open-cluster-management
    - vault
    - golang-external-secrets
    - config-demo
    - hello-world

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.6
      #csv: advanced-cluster-management.v2.6.1

  projects:
    - hub
    - config-demo
    - hello-world

  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      path: common/acm
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
          - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: hub
      path: common/hashicorp-vault

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      path: common/golang-external-secrets

    config-demo:
      name: config-demo
      namespace: config-demo
      project: config-demo
      path: charts/all/config-demo

    hello-world:
      name: hello-world
      namespace: hello-world
      project: hello-world
      path: charts/all/hello-world

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: regional-ca
      # ansible playbook to be run
      playbook: ansible/playbooks/on-hub-get-regional-ca.yml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  managedClusterGroups:
    exampleRegion:
      name: group-one
      acmlabels:
      - name: clusterGroup
        value: group-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

      # Before enabling cluster provisioning, ensure AWS and/or Azure
      #   credentials and OCP pull secrets are defined in Vault.
      #   See values-secret.yaml.template
      #
      #clusterPools:
      #  exampleAWSPool:
      #    name: aws-ap
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      aws:
      #        region: ap-southeast-2
      #    clusters:
      #    - One
      #
      #  exampleAzurePool:
      #    name: azure-us
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      azure:
      #        baseDomainResourceGroupName: dojo-dns-zones
      #        region: eastus
      #    clusters:
      #    - Two
      #    - Three

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
